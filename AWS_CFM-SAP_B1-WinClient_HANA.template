{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(000D) Use this Template to Deploy SAP Business One on AWS. **NOTICE** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
        "VPCID": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "VPC-ID of your existing Virtual Private Cloud (VPC) where you want to depoy SAP HANA.",
            "Default": "vpc-xxxxxxxxxxxxxxxxx", 
            "AllowedPattern": "vpc-[0-9a-z]{17}"
        },
        "PrivSubCIDR": {
            "Description": "CIDR Block for Private Subnet where SAP HANA will be deployed.",
            "Type": "String",
            "Default": "10.160.1.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "DMZCIDR": {
            "Description": "CIDR Block for the Public DMZ Subnet located in the new VPC.",
            "Type": "String",
            "Default": "10.160.2.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
        },
        "HANASubnet": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Subnet-ID the existing subnet in your VPC where you want to deploy SAP HANA.",
            "Default": "subnet-xxxxxxxxxxxxxxxxx",
            "AllowedPattern": "subnet-[0-9a-z]{17}"
        },
        "HanaInstanceType": {
            "Type": "String",
            "Default": "c4.8xlarge",
            "Description": "Instance Type of HANA host [r4.8xlarge/r4.4xlarge/r4.2xlarge/c4.8xlarge,etc]",
            "AllowedValues": [
                "c4.8xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "x1.16xlarge"
            ]
        },
        "HanaMasterAmiID": {
            "Type": "String",
            "Default": "ami-xxxxxxxx",
            "Description": "Use a SLES customized AMI-ID",
            "AllowedPattern": "ami-([0-9a-z]{8}|[0-9a-z]{17})"
        },
        "WinInstanceType": {
            "Type": "String",
            "Description": "Instance Type of Windows Client",
            "Default": "m4.large"
        },
        "WinClientAmiID": {
            "Type": "String",
            "Default": "ami-xxxxxxxx",
            "Description": "Use a windows customized AMI-ID",
            "AllowedPattern": "ami-([0-9a-z]{8}|[0-9a-z]{17})"
        }
    },
    "Resources": {
        "HANAMasterInterface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "Description": "Network Interface for HANA Master",
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "GroupSet": [
                    {
                        "Ref": "HANASecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "Private"
                    }
                ]
            }
        },
        "HANASecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable external access to the HANA Master and allow communication from slave instances",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "1",
                        "ToPort": "65535"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "111",
                        "ToPort": "111"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "111",
                        "ToPort": "111"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "2049",
                        "ToPort": "2049"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "2049",
                        "ToPort": "2049"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "4000",
                        "ToPort": "4002"
                    },
                    {
                        "IpProtocol": "udp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "4000",
                        "ToPort": "4002"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "40000",
                        "ToPort": "40001"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "30010",
                        "ToPort": "30010"
                    },
                    {
                        "IpProtocol": "icmp",
                        "CidrIp": {
                            "Ref": "PrivSubCIDR"
                        },
                        "FromPort": "-1",
                        "ToPort": "-1"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "50013",
                        "ToPort": "50013"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "50014",
                        "ToPort": "50014"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "30015",
                        "ToPort": "30015"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "30009",
                        "ToPort": "30010"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "30017",
                        "ToPort": "30017"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "40000",
                        "ToPort": "40001"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "8000",
                        "ToPort": "8000"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "4300",
                        "ToPort": "4300"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "8080",
                        "ToPort": "8080"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "8443",
                        "ToPort": "8443"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "1128",
                        "ToPort": "1128"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "1129",
                        "ToPort": "1129"
                    },
                    {
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "DMZCIDR"
                        },
                        "FromPort": "22",
                        "ToPort": "22"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "1",
                        "ToPort": "65535"
                    }
                ]
            }
        },
        "WinSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group for Windows Client",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "HANAIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "HANA-Backup",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:*",
                                        "ec2:Describe*",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:AttachVolume",
                                        "ec2:CreateTags",
                                        "ec2:CreateVolume",
                                        "ec2:RunInstances",
                                        "ec2:StartInstances",
                                        "ec2:DeleteVolume",
                                        "ec2:CreateSecurityGroup",
                                        "ec2:CreateSnapshot"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:*",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:GetItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:UpdateTable"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "HANAIAMProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "HANAIAMRole"
                    }
                ]
            }
        },
        "HANAMasterInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "HANAMasterInterface"
                        },
                        "DeviceIndex": "0"
                    }
                ],
                "ImageId": {
                    "Ref": "HanaMasterAmiID"
                },
                "IamInstanceProfile": {
                    "Ref": "HANAIAMProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "SAP HANA Master"
                    }
                ],
                "InstanceType": {
                    "Ref": "HanaInstanceType"
                }
            }
        },
        "WINClient": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Ref": "WinClientAmiID"
                },
                "InstanceType": {
                    "Ref": "WinInstanceType"
                },
                "SubnetId": {
                    "Ref": "HANASubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WINClient"
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "WinSecurityGroup"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "HANAMasterInstanceIP": {
            "Description": "HANA Master Node IP Address",
            "Value": {
                "Fn::GetAtt": [
                    "HANAMasterInstance",
                    "PrivateIp"
                ]
            }
        },
        "HANAMasterSecurityGroup": {
            "Description": "Security Group created for the SAP HANA Master node",
            "Value": {
                "Fn::GetAtt": [
                    "HANASecurityGroup",
                    "GroupId"
                ]
            }
        }
    }
}